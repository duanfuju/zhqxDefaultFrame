package cn.com.oking.caiyun;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.text.DecimalFormat;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.transaction.annotation.Transactional;

import cn.com.oking.util.JsonUtil;


public class CaiYunService {
	
	@Resource
	private CaiyunYjDao dao;
	
	@Transactional
	 public void RunMethod(){
		String lonlat[] = { "118.6771,32.2559", "118.6285,32.2030",
				"118.6444,32.2175", "118.6547,32.2247", "118.6661,32.2378",
				"118.6716,32.2500", "118.6952,32.2500", "118.7104,32.2512",
				"118.7231,32.2410", "118.7272,32.2274", "118.7330,32.2169",
				"118.7364,32.2032", "118.7419,32.1919", "118.7423,32.1832",
				"118.7574,32.1881", "118.7708,32.1838", "118.7749,32.1704",
				"118.7776,32.1611", "118.7766,32.1509", "118.7725,32.1358",
				"118.7560,32.1195", "118.7461,32.1129", "118.7382,32.1024",
				"118.7296,32.0939", "118.7248,32.0858", "118.7182,32.0803",
				"118.7104,32.0721", "118.7038,32.0652", "118.7038,32.0652",
				"118.7007,32.0561", "118.6918,32.0413", "118.6870,32.0299",
				"118.6767,32.0142", "118.6695,32.0075", "118.6678,32.0023",
				"118.6631,31.9906", "118.6592,31.9848", "118.6547,31.9796",
				"118.6482,31.9733", "118.6432,31.9670", "118.6383,31.9612",
				"118.6338,31.9555", "118.6297,31.9512", "118.6247,31.9468",
				"118.6165,31.9378", "118.6094,31.9303", "118.5974,31.9273",
				"118.5888,31.9242", "118.5794,31.9181", "118.5756,31.9149",
				"118.5675,31.9098", "118.5627,31.9056", "118.5593,31.8999",
				"118.5502,31.8909", "118.5438,31.8872", "118.5361,31.8815",
				"118.5305,31.8769", "118.5263,31.8716", "118.5246,31.8678",
				"118.5217,31.8649", "118.5189,31.8599", "118.5162,31.8557",
				"118.5124,31.8521", "118.5090,31.8474", "118.5056,31.8422",
				"118.4982,31.8404", "118.4872,31.8429", "118.4769,31.8490",
				"118.4702,31.8535", "118.4662,31.8595", "118.4664,31.8675",
				"118.4724,31.8776", "118.4630,31.8802", "118.4535,31.8827",
				"118.4457,31.8874", "118.4398,31.8923", "118.4320,31.8952",
				"118.4269,31.8970", "118.4154,31.9006", "118.4095,31.9078",
				"118.4011,31.9094", "118.3997,31.9134", "118.3946,31.9138",
				"118.3898,31.9135", "118.3869,31.9135", "118.3822,31.9176",
				"118.3793,31.9209", "118.3754,31.9237", "118.3714,31.9262",
				"118.3664,31.9290", "118.3639,31.9360", "118.3666,31.9412",
				"118.3690,31.9470", "118.3688,31.9540", "118.3712,31.9603",
				"118.3795,31.9680", "118.3784,31.9751", "118.3752,31.9798",
				"118.3822,31.9828", "118.3906,31.9891", "118.3887,32.0041",
				"118.3884,32.0157", "118.4008,32.0195", "118.3987,32.0226",
				"118.3924,32.0256", "118.3881,32.0279", "118.3861,32.0318",
				"118.3861,32.0346", "118.3867,32.0385", "118.3874,32.0421",
				"118.3905,32.0448", "118.3937,32.0490", "118.3851,32.0572",
				"118.3892,32.0628", "118.3952,32.0675", "118.3956,32.0735",
				"118.4004,32.0778", "118.4042,32.0769", "118.4064,32.0822",
				"118.4134,32.0844", "118.4213,32.0861", "118.4213,32.0861",
				"118.4399,32.0918", "118.4479,32.0957", "118.4551,32.0991",
				"118.4629,32.1015", "118.4685,32.1073", "118.4728,32.1146",
				"118.4852,32.1198", "118.4975,32.1212", "118.4934,32.1313",
				"118.4975,32.1412", "118.5027,32.1476", "118.4963,32.1616",
				"118.4960,32.1723", "118.5001,32.1800", "118.5072,32.1873",
				"118.5102,32.1944", "118.5190,32.1895", "118.5272,32.1909",
				"118.5375,32.1935", "118.5575,32.1988", "118.5774,32.2015",
				"118.5929,32.2003", "118.6049,32.2026", "118.6183,32.2061",
				"118.6300,32.2058", "118.6427,32.2099" };
		
		String lonlat1[] = { "117.9699,32.1022", "117.9033,32.0300",
				"117.8895,31.8983", "117.9499,31.7280", "118.0777,31.6403",
				"118.1834,31.5877", "118.2699,31.5514", "118.4526,31.5304",
				"118.6119,31.5432", "118.7657,31.5737", "118.9785,31.7221",
				"119.1296,31.9135", "119.1996,32.1091", "119.1969,32.2985",
				"119.1502,32.3751", "119.1049,32.4540", "119.0410,32.4997",
				"118.9895,32.5214", "118.9047,32.5362", "118.8309,32.5518",
				"118.6845,32.5557", "118.5819,32.5566", "118.4916,32.5358",
				"118.4109,32.5239", "118.3316,32.5025", "118.2856,32.4593",
				"118.1928,32.4118", "118.0987,32.3213", "118.0383,32.2505",
				"117.9954,32.1790", };
		/*String lonlat2[] = {  "117.7575,32.4893",
				"117.6640,32.4280", "117.5091,32.2551", "117.4491,32.1234",
				"117.3864,31.9608", "117.3871,31.8558", "117.3842,31.7479",
				"117.7000,31.3957", "117.9170,31.3101", "118.0901,31.2819",
				"118.2837,31.2510", "118.6256,31.2287", "118.8921,31.3050",
				"119.2292,31.4665", "119.3713,31.5713", "119.5279,31.7443",
				"119.5773,31.8825", "119.6357,32.0090", "119.6941,32.2242",
				"119.6934,32.3925", "119.6021,32.6287", "119.4441,32.7697",
				"119.2416,32.8493", "119.0967,32.9035", "118.8859,32.9266",
				"118.7568,32.9185","118.7425,32.9127", "118.6100,32.9156",
				"118.4743,32.9071", "118.3875,32.8912", "118.2972,32.8684",
				"118.1568,32.8301", "118.0984,32.7952", "118.0083,32.7303",
				"117.9430,32.6681", "117.8891,32.6020"};*/
		coordinateCycle(lonlat,"浦口区");
		coordinateCycle(lonlat1,"临近警戒区");
		//coordinateCycle(lonlat2,"早期警戒区");
	}


	private void coordinateCycle(String[] lonlat,String district) {
		for (int i = 0; i < lonlat.length; i++) {
			String url = "http://tracknn.api.caiyunapp.com/fcgi-bin/v1/notify_brain_tracknn.py?lonlat="+lonlat[i]+"&format=json&product=minutes_prec_only&token=KvaklupbrejdYXAl";
			String json = loadJson(url);
			Map<String, Object> map = JsonUtil.listKeyMap(json);
			if (map.get("status").toString().equalsIgnoreCase("ok")) {
				String result[] = map.get("result").toString().split(",");
				double gl = Double.parseDouble(result[1]) * 100;
		        if(gl>50){
		        //如果要下雨
		        	//分割经纬度
		        	String[] lal=lonlat[i].split(",");
		        	String obj=dao.findMatchCondition(district);
		        	if (obj!=null) {
		        		dao.update(obj,lal[0], lal[1]);
		        		break;
					}else{
						dao.insert(lal[0], lal[1],district);
						break;
					}
		        }
			}
		}
	}
	
	
	public static String loadJson(String url) {
		StringBuilder json = new StringBuilder();
		try {
			URL urlObject = new URL(url);
			URLConnection uc = urlObject.openConnection();
			BufferedReader in = new BufferedReader(new InputStreamReader(
					uc.getInputStream()));
			String inputLine = null;
			while ((inputLine = in.readLine()) != null) {
				json.append(inputLine);
			}
			in.close();
		} catch (MalformedURLException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return json.toString();
	}
	
	
	// 传入经纬度,返回未来一小时天气情况
		public static String oneHour(String lonlat) {
			String forecast = "未来一小时（降水概率0.7%）\n不会有雨，最近的降雨带在东南129公里外呢";
			String url = "http://caiyunapp.com/fcgi-bin/v1/api.py?lonlat=" + lonlat
					+ "&product=minutes_prec_only&token=KvaklupbrejdYXAl";
			String json = loadJson(url);
			Map<String, Object> map = JsonUtil.listKeyMap(json);
			String url1 = "http://storm.caiyunapp.com/fcgi-bin/v1/notify_brain_20141014.py?lonlat="
					+ lonlat
					+ "&format=json&product=prob&token=Y2FpeXVuIGFwaSB3ZWI";
			String json1 = loadJson(url1);
			System.out.println(json1);
			Map<String, Object> map1 = JsonUtil.listKeyMap(json1);
			if (map1.get("status").toString().equalsIgnoreCase("ok")) {
				String result = map1.get("result").toString();
				double gl = Double.parseDouble(result) * 100;
				DecimalFormat df = new DecimalFormat("0.0");
				forecast = "未来一小时（降水概率" + df.format(gl) + "%）" + "\n"
						+ map.get("summary");
			} else {
				forecast = "未来一小时(无降水)" + "\n" + map.get("summary");
			}
			return forecast;
		}
}
